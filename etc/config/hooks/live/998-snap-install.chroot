#!/bin/sh

apt-get -y update
apt-get -y install xdelta3

snap_preseed() {
    local SNAP_NAME="${1}"
    local SNAP_CHANNEL="${2}"
    local SNAP_CONFINEMENT=""
    local SNAP_FILE=""

    # Download a snap only once
    if ls -1 /var/lib/snapd/seed/snaps/"${SNAP_NAME}"_*.snap >/dev/null 2>&1; then
        return
    fi

    SNAPPY_STORE_NO_CDN=1 UBUNTU_STORE_ARCH=amd64 snap download --target-directory=/var/lib/snapd/seed "${SNAP_NAME}" --channel="${SNAP_CHANNEL}"
    mv -v /var/lib/snapd/seed/*.assert /var/lib/snapd/seed/assertions/
    mv -v /var/lib/snapd/seed/*.snap /var/lib/snapd/seed/snaps/
    if [ "${SNAP_NAME}" == "snapd" ]; then
        touch "/var/lib/snapd/seed/.snapd-explicit-install-stamp"
    fi

    # Add the snap to the seed.yaml
    if [ ! -e /var/lib/snapd/seed/seed.yaml ]; then
        echo "snaps:" > /var/lib/snapd/seed/seed.yaml
    fi

    cat <<EOF >> /var/lib/snapd/seed/seed.yaml
  -
    name: ${SNAP_NAME}
    channel: ${SNAP_CHANNEL}
EOF

    # Process classic snaps
    if [ -e "${R_STAGE_0}/${SNAP_NAME}.info" ]; then
        SNAP_CONFINEMENT=$(grep confinement "${R_STAGE_0}/${SNAP_NAME}.info" | cut -d':' -f2 | sed 's/ //g')
        echo "${SNAP_CONFINEMENT}"
        case "${SNAP_CONFINEMENT}" in
            *classic*) echo "    classic: true" >> /var/lib/snapd/seed/seed.yaml;;
        esac
    fi

    echo -n "    file: " >> /var/lib/snapd/seed/seed.yaml
    SNAP_FILE=$(ls -1 /var/lib/snapd/seed/snaps/${SNAP_NAME}_*.snap)
    basename "${SNAP_FILE}" >> /var/lib/snapd/seed/seed.yaml
}

snap_install() {
    local SEED_SNAPS="firefox thunderbird gnome-42-2204 gtk-common-themes"

    # Prepare assertions
    mkdir -p /var/lib/snapd/seed/assertions
    mkdir -p /var/lib/snapd/seed/snaps
    snap known --remote model series=16 model=generic-classic brand-id=generic > "/var/lib/snapd/seed/assertions/model"
    ACCOUNT_KEY=$(grep "^sign-key-sha3-384" "/var/lib/snapd/seed/assertions/model" | cut -d':' -f2 | sed 's/ //g')
    snap known --remote account-key public-key-sha3-384="${ACCOUNT_KEY}" > "/var/lib/snapd/seed/assertions/account-key"
    snap known --remote account account-id=generic > "/var/lib/snapd/seed/assertions/account"

    # Download the snaps
    for SNAP_NAME in ${SEED_SNAPS}; do
        SNAP_CHANNEL="stable"
        snap_preseed "${SNAP_NAME}" "${SNAP_CHANNEL}"

        # Download any required base snaps
        if snap info --verbose /var/lib/snapd/seed/snaps/"${SNAP_NAME}"*.snap > "${SNAP_NAME}.info"; then
            if grep -q '^base:' "${SNAP_NAME}.info"; then
                BASE_SNAP=$(awk '/^base:/ {print $2}' "${SNAP_NAME}.info")
                snap_preseed "${BASE_SNAP}" stable
                case "${BASE_SNAP}" in
                    core[0-9]*) snap_preseed snapd stable;;
                esac
            fi
        fi
    done

    # Validate seed.yaml
    if snap debug validate-seed /var/lib/snapd/seed/seed.yaml; then
        cat /var/lib/snapd/seed/seed.yaml
    else
        echo "ERROR! seed.yaml validation failed."
        exit 1
    fi

    /usr/lib/snapd/snap-preseed --reset
    apparmor_parser --skip-read-cache --write-cache --skip-kernel-load --verbose  -j $(nproc) /etc/apparmor.d
}

snap_install
